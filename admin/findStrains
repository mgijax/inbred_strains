#!./python
#
# findStrains
# Utility program that attempts to locate strain headings
# in the INBREDS.rtf file. Output should be saved to file
# strains.txt.


#-------scriptdir check and config load
 
import sys
import os
 
if os.path.islink(sys.argv[0]):
        # Invoked as a symbolic link. Exit with an error message.
        msg = "ERROR: Script %s invoked by a symbolic link.\n" % sys.argv[0]
        sys.stderr.write(msg)
        sys.exit(1)
 
# make sure script is invoked from its installation directory.
NOTBASENAME, BASENAME = os.path.split(sys.argv[0])
if NOTBASENAME not in ('.', '', None):
        # Invoked from another directory. Exit with an error message.
        msg = "ERROR: Script %s invoked from another directory.\n" % sys.argv[0]
        sys.stderr.write(msg)
        sys.exit(1)
 
if '.' not in sys.path:
        sys.path.insert(0, '.')
 
#-------end scriptdir check and config load

import re

ifd = sys.stdin

##
## Regular expression. Matches lines beginning with "Inbr". This
## is often a signal that the preceeding line was a strain name.
##
re1 = re.compile('^[ ]*Inbr')

##
## Regular expression. Matches lines containing only a "\par" 
## (new paragraph) tag.
##
re2 = re.compile('^[ ]*\\\\par[ ]*$')

##
## Regular expression. Matches lines containing a single word followed
## by "\par". The word must begin with an uppercase letter, but may contain
## any non-space characters after that. Lame attempt to identify a strain
## heading in the text.
##
re3 = re.compile('^[A-Z][^ ]* \\\\par[ ]*$')

line = ifd.readline()
lastline = ''
while line:
        if re1.match(line) != None or re3.match(lastline) != None:
            i = re.search('[^A-Za-z0-9]', lastline).regs[0][0]
            mstrain = lastline[0:i]
            ##
            ## Hardwire a special case for the following exception:
            ##          C3Heb is a substrain of C3H
            ##
            if mstrain == "C3HeB":
                mstrain = "C3H"
                i = 3
            if mstrain in ['Inbr', 'to','Characteristics',
                           'continued','Reproduction','Black','case',
                           'Research','biochemistry']:
                lastline = line
            else:
                sys.stdout.write(lastline[0:i] + ':' + lastline)
            
        if re2.match(line) == None:
            lastline = line
        line = ifd.readline()
